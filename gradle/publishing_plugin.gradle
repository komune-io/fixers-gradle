/*
 * Copyright 2017-2020 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license.
 */

// Configures publishing of Maven artifacts to Bintray
apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

apply from: project.rootProject.file('gradle/pom.gradle')
apply from: project.rootProject.file('gradle/publishing_common.gradle')

afterEvaluate { Project project ->
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                pom.withXml(configureMavenCentralMetadata)
            }
            pluginMaven(MavenPublication) {
                pom.withXml(configureMavenCentralMetadata)
            }
            'io.komune.fixers.gradle.configPluginMarkerMaven'(MavenPublication) {
                pom.withXml(configurePomMetadata)
            }
            'io.komune.fixers.gradle.dependenciesPluginMarkerMaven'(MavenPublication) {
                pom.withXml(configurePomMetadata)
            }
            'io.komune.fixers.gradle.kotlin.jvmPluginMarkerMaven'(MavenPublication) {
                pom.withXml(configurePomMetadata)
            }
            'io.komune.fixers.gradle.kotlin.mppPluginMarkerMaven'(MavenPublication) {
                pom.withXml(configurePomMetadata)
            }
            'io.komune.fixers.gradle.publishPluginMarkerMaven'(MavenPublication) {
                pom.withXml(configurePomMetadata)
            }
            'io.komune.fixers.gradle.npmPluginMarkerMaven'(MavenPublication) {
                pom.withXml(configurePomMetadata)
            }
            'io.komune.fixers.gradle.checkPluginMarkerMaven'(MavenPublication) {
                pom.withXml(configurePomMetadata)
            }
        }
        repositories {
            maven {
                url = project.ext.repoUrl
                credentials {
                    username project.ext.repoUsername
                    password project.ext.repoPassword
                }
            }
        }
    }
    signing {
        useInMemoryPgpKeys(project.ext.signingKey, project.ext.signingPassword)
    }
}
