name: Reusable Security Analysis Workflow

on:
  workflow_call:
    inputs:
      java-distribution:
        description: "Java distribution."
        required: false
        type: "string"
        default: "temurin"
      java-version:
        description: "Java version"
        required: false
        type: "string"
        default: "17"

      with-gradle-build-scan-publish:
        description: "Flag to enable gradle build scan publish"
        required: false
        default: true
        type: "boolean"

    secrets:
      SONAR_TOKEN:
        required: true
      PKG_GITHUB_USERNAME:
        required: true
      PKG_GITHUB_TOKEN:
        required: true

jobs:
  gradle-dependency-analysis:
    runs-on: ubuntu-latest
    env:
      PKG_GITHUB_USERNAME: ${{ secrets.PKG_GITHUB_USERNAME }}
      PKG_GITHUB_TOKEN: ${{ secrets.PKG_GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Initialize Java and Gradle Environment
        id: jvm
        uses: komune-io/fixers-gradle/.github/actions/jvm@main
        with:
          with-gradle: false
          with-setup-gradle-github-pkg: true
          with-gradle-build-scan-publish: ${{ inputs.with-gradle-build-scan-publish }}
          java-distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2
      - name: Submit Dependency Graph to Gradle Enterprise
        uses: gradle/actions/dependency-submission@v3
        with:
          additional-arguments: -I ${{ steps.jvm.outputs.setup_gradle_github_pkg }} --no-configuration-cache
          build-scan-publish: true
          build-scan-terms-of-service-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-service-agree: "yes"

  sonarcloud-analysis:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Gradle for SonarCloud Analysis
        uses: gradle/gradle-build-action@v3
      - name: Setup Gradle with GitHub Package Registry for SonarCloud
        uses: komune-io/fixers-gradle/.github/actions/setup-gradle-github-pkg@main
      - name: Run SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check SonarQube Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@v1.1.0
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

#  codacy-analysis:
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      security-events: write
#    steps:
#      - uses: actions/checkout@v4
#      - name: Run Codacy Analysis
#        uses: codacy/codacy-analysis-cli-action@v4
#        with:
#          output: results.sarif
#          format: sarif
#          gh-code-scanning-compat: true
#          max-allowed-issues: 2147483647
#      - name: Upload SARIF File to GitHub Code Scanning
#        uses: github/codeql-action/upload-sarif@v3
#        with:
#          sarif_file: results.sarif