name: Reusable JVM Development Workflow

on:
  workflow_call:
    inputs:
      java-version:
        description: "The Java version to use."
        required: false
        type: "string"
        default: "17"

      with-gradle-build-scan-publish:
        description: "Flag to enable gradle build scan publish"
        required: false
        default: true
        type: "boolean"

      with-publish-docker-registry-login:
        description: 'Flag to enable Docker login to the publish Docker registry.'
        required: false
        default: 'false'
        type: "string"
        
      with-stage-docker-registry-login:
        description: 'Flag to enable Docker login to the stage Docker registry.'
        required: false
        default: 'false'
        type: "string"
        
      with-promote-docker-registry-login:
        description: 'Flag to enable Docker login to the promote Docker registry.'
        required: false
        default: 'false'
        type: "string"
        
      # DEPRECATED
      with-docker-registry-login:
        description: 'Flag to enable Docker login to the Docker registry. DEPRECATED: Use with-publish-docker-registry-login, with-stage-docker-registry-login, or with-promote-docker-registry-login instead.'
        required: false
        default: 'false'
        type: "string"

      excluded-versioning-branch:
        description: "A single branch name prefix where the job should be excluded from running. For example, use 'versioning/' to skip running the job on any branch that starts with 'versioning/'."
        required: false
        type: "string"
        default: "versioning/"

      make-file:
        description: "The Makefile to execute."
        required: false
        type: "string"
        default: "Makefile"

      make-lint-task:
        description: "The Make command to execute for linting."
        required: false
        type: "string"
        default: "lint"

      make-build-task:
        description: "The Make command to execute for building."
        required: false
        type: "string"
        default: "build"

      make-test-task:
        description: "The Make command to execute for testing."
        required: false
        type: "string"
        default: "test"

      # DEPRECATED
      make-publish-task:
        description: "The Make command to execute for publishing."
        required: false
        type: "string"
        default: "publish"

      make-stage-task:
        description: "The Make command to execute for staging."
        required: false
        type: "string"
        default: "stage"

      make-check-task:
        description: "The Make command to execute for checking."
        required: false
        type: "string"
        default: "check"

      make-promote-task:
        description: "The Make command to execute for promote."
        required: false
        type: "string"
        default: "promote"

      docker-buildx-platform:
        description: "Specify the target platforms for Docker buildx, such as 'linux/amd64,linux/arm64'. Leave empty to use the default platform."
        required: false
        type: "string"

      # DEPRECATED
      docker-publish-repository:
        description: "The Docker registry to which images should be published. Defaults to GitHub Container Registry (ghcr.io)."
        required: false
        type: "string"
        default: "ghcr.io"

      docker-stage-repository:
        description: "The Docker registry to which images should be staged. Defaults to GitHub Container Registry (ghcr.io)."
        required: false
        type: "string"
        default: "ghcr.io"

      # DEPRECATED
      force-publish:
        description: "Flag to force execute publish task."
        required: false
        type: "string"
        default: "false"

      force-stage:
        description: "Flag to force execute stage task."
        required: false
        type: "string"
        default: "false"

      docker-promote-repository:
        description: "The Docker registry to which images should be promoted. Defaults to Docker Hub (docker.io)."
        required: false
        type: "string"
        default: "docker.io"

      artifact-name:
        description: "The name for the uploaded artifact, if needed."
        required: false
        type: "string"

      artifact-path:
        description: "The path to the artifact to upload, if needed."
        required: false
        type: "string"

      on-tag:
        description: "The path to the artifact to upload, if needed."
        required: false
        type: "string"
        default: 'false'

    secrets:
      GPG_SIGNING_KEY:
        required: false
      GPG_SIGNING_PASSWORD:
        required: false
      PKG_GITHUB_USERNAME:
        required: false
      PKG_GITHUB_TOKEN:
        required: false
      # DEPRECATED
      DOCKER_PUBLISH_USERNAME:
        required: false
      # DEPRECATED
      DOCKER_PUBLISH_PASSWORD:
        required: false
      DOCKER_STAGE_USERNAME:
        required: false
      DOCKER_STAGE_PASSWORD:
        required: false
      DOCKER_PROMOTE_USERNAME:
        required: false
      DOCKER_PROMOTE_PASSWORD:
        required: false
      JRELEASER_MAVENCENTRAL_USERNAME:
        required: false
      JRELEASER_MAVENCENTRAL_PASSWORD:
        required: false
      SONAR_TOKEN:
        required: false

jobs:
  run-dev-tasks:
    if: (github.event_name == 'pull_request' && !startsWith(github.head_ref, inputs.excluded-versioning-branch)) || github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    env:
      GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
      GPG_SIGNING_PASSWORD: ${{ secrets.GPG_SIGNING_PASSWORD }}
      JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.JRELEASER_MAVENCENTRAL_USERNAME }}
      JRELEASER_MAVENCENTRAL_PASSWORD: ${{ secrets.JRELEASER_MAVENCENTRAL_PASSWORD }}
      JRELEASER_DEPLOY_MAVEN_NEXUS2_USERNAME: ${{ secrets.JRELEASER_MAVENCENTRAL_USERNAME }}
      JRELEASER_DEPLOY_MAVEN_NEXUS2_PASSWORD: ${{ secrets.JRELEASER_MAVENCENTRAL_PASSWORD }}
      JRELEASER_DEPLOY_MAVEN_GITHUB_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PKG_GITHUB_USERNAME: ${{ secrets.PKG_GITHUB_USERNAME }}
      PKG_GITHUB_TOKEN: ${{ secrets.PKG_GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Add Firefox to Run Kotlin test
        uses: browser-actions/setup-firefox@v1

      - name: Initialize Java and Gradle Environment
        uses: komune-io/fixers-gradle/.github/actions/jvm@main
        with:
          with-gradle-build-scan-publish: ${{ inputs.with-gradle-build-scan-publish }}
          java-version: ${{ inputs.java-version }}

      - name: Get Version from File
        uses: komune-io/fixers-gradle/.github/actions/version@main

      - name: Execute Make Lint Task
        if: (contains(inputs.on-tag, inputs.make-lint-task) && startsWith(github.ref, 'refs/tags/')) || (!startsWith(github.ref, 'refs/tags/'))
        uses: komune-io/fixers-gradle/.github/actions/make-step-prepost@main
        with:
          make-file: ${{ inputs.make-file }}
          make-step: ${{ inputs.make-lint-task }}

      - name: Setup Docker Buildx for Specified Platforms
        if: inputs.docker-buildx-platform != ''
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ inputs.docker-buildx-platform }}

      - name: Execute Make Build Task
        uses: komune-io/fixers-gradle/.github/actions/make-step-prepost@main
        with:
          make-file: ${{ inputs.make-file }}
          make-step: ${{ inputs.make-build-task }}

      - name: Execute Make Test Task
        if: (contains(inputs.on-tag, inputs.make-test-task) && startsWith(github.ref, 'refs/tags/')) || (!startsWith(github.ref, 'refs/tags/'))
        uses: komune-io/fixers-gradle/.github/actions/make-step-prepost@main
        with:
          make-file: ${{ inputs.make-file }}
          make-step: ${{ inputs.make-test-task }}

      # DEPRECATED
      - name: Docker Registry Login to Publish
        if: (inputs.force-publish == 'true' || (inputs.with-publish-docker-registry-login == 'true' && ((github.ref == 'refs/heads/main' ||startsWith(github.ref, 'refs/heads/release/') ||startsWith(github.ref, 'refs/heads/versioning/') ||(contains(inputs.on-tag, 'publish') && startsWith(github.ref, 'refs/tags/'))) ||(github.event_name == 'pull_request' &&(contains(github.event.pull_request.labels.*.name, 'publish') || startsWith(github.ref, 'refs/heads/versioning/'))))))
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.docker-publish-repository }}
          username: ${{ secrets.DOCKER_PUBLISH_USERNAME }}
          password: ${{ secrets.DOCKER_PUBLISH_PASSWORD }}
      # DEPRECATED
      - name: Execute Make Publish Task
        if: (inputs.force-publish == 'true' || (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/') || (contains(inputs.on-tag, 'publish') && startsWith(github.ref, 'refs/tags/'))) || (github.event_name == 'pull_request' && (contains(github.event.pull_request.labels.*.name, 'publish') || startsWith(github.ref, 'refs/heads/versioning/'))))
        uses: komune-io/fixers-gradle/.github/actions/make-step-prepost@main
        with:
          make-file: ${{ inputs.make-file }}
          make-step: ${{ inputs.make-publish-task }}

      - name: Docker Registry Login to Stage
        if: (inputs.force-stage == 'true' || (inputs.with-stage-docker-registry-login == 'true' && ((github.ref == 'refs/heads/main' ||startsWith(github.ref, 'refs/heads/release/') ||startsWith(github.ref, 'refs/heads/versioning/') ||(contains(inputs.on-tag, 'stage') && startsWith(github.ref, 'refs/tags/'))) ||(github.event_name == 'pull_request' &&(contains(github.event.pull_request.labels.*.name, 'stage') || startsWith(github.ref, 'refs/heads/versioning/'))))))
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.docker-stage-repository }}
          username: ${{ secrets.DOCKER_STAGE_USERNAME }}
          password: ${{ secrets.DOCKER_STAGE_PASSWORD }}

      - name: Execute Make Stage Task
        if: (inputs.force-stage == 'true' || (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/') || (contains(inputs.on-tag, 'stage') && startsWith(github.ref, 'refs/tags/'))) || (github.event_name == 'pull_request' && (contains(github.event.pull_request.labels.*.name, 'stage') || startsWith(github.ref, 'refs/heads/versioning/'))))
        uses: komune-io/fixers-gradle/.github/actions/make-step-prepost@main
        with:
          make-file: ${{ inputs.make-file }}
          make-step: ${{ inputs.make-stage-task }}
      - name: Execute Make Check Task
        if: (contains(inputs.on-tag, inputs.make-check-task) && startsWith(github.ref, 'refs/tags/')) || (!startsWith(github.ref, 'refs/tags/'))
        uses: komune-io/fixers-gradle/.github/actions/make-step-prepost@main
        with:
          make-file: ${{ inputs.make-file }}
          make-step: ${{ inputs.make-check-task }}

      - name: Docker Registry Login To Promote
        if: (inputs.with-promote-docker-registry-login == 'true' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/') ||  (contains(inputs.on-tag, 'promote') && startsWith(github.ref, 'refs/tags/')) ))
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.docker-promote-repository }}
          username: ${{ secrets.DOCKER_PROMOTE_USERNAME }}
          password: ${{ secrets.DOCKER_PROMOTE_PASSWORD }}

      - name: Execute Make Promote Task
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/') ||  (contains(inputs.on-tag, 'promote') && startsWith(github.ref, 'refs/tags/'))
        uses: komune-io/fixers-gradle/.github/actions/make-step-prepost@main
        with:
          make-file: ${{ inputs.make-file }}
          make-step: ${{ inputs.make-promote-task }}

      - name: Upload Artifact if Specified
        if: inputs.artifact-name != '' && inputs.artifact-path != ''
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}
          path: ${{ inputs.artifact-path }}
